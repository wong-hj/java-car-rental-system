/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaassignmentgui;

import java.awt.Color;
import java.awt.List;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Horngjun
 */
public class RentCar extends javax.swing.JFrame {
    
    public static Car carChosen = null;
    public static String pickup_Date = null;
    public static String return_Date = null;

    /**
     * Creates new form RentCar
     */
    public RentCar() {
        initComponents();
        carTable.setDefaultEditor(Object.class, null);
        
        
        readCarTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jButton1 = new javax.swing.JButton();
        topBar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        pickupLabel = new javax.swing.JLabel();
        returnLabel = new javax.swing.JLabel();
        pickupDate = new com.toedter.calendar.JDateChooser();
        returnDate = new com.toedter.calendar.JDateChooser();
        filterBtn = new javax.swing.JButton();
        backgroundImage = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 700));
        setPreferredSize(new java.awt.Dimension(1300, 700));
        getContentPane().setLayout(null);

        topBar.setBackground(new java.awt.Color(0, 0, 0));
        topBar.setMinimumSize(new java.awt.Dimension(1300, 60));
        topBar.setPreferredSize(new java.awt.Dimension(1300, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/rent_smalllogo.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Main Menu");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout topBarLayout = new javax.swing.GroupLayout(topBar);
        topBar.setLayout(topBarLayout);
        topBarLayout.setHorizontalGroup(
            topBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(1068, Short.MAX_VALUE))
        );
        topBarLayout.setVerticalGroup(
            topBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(topBarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(topBar);
        topBar.setBounds(0, 0, 1300, 60);

        jLabel2.setFont(new java.awt.Font("Perpetua", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Available Cars");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 80, 200, 50);

        carTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car Plate", "Brand", "Model", "Type", "Color", "Speed", "Seat", "Price", "Status"
            }
        ));
        carTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(carTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 140, 1220, 530);

        searchField.setFont(new java.awt.Font("Perpetua", 0, 24)); // NOI18N
        searchField.setForeground(new java.awt.Color(153, 153, 153));
        searchField.setText(" Search...");
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        getContentPane().add(searchField);
        searchField.setBounds(950, 80, 310, 40);

        pickupLabel.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        pickupLabel.setForeground(new java.awt.Color(255, 255, 255));
        pickupLabel.setText("Pick Up Date");
        getContentPane().add(pickupLabel);
        pickupLabel.setBounds(240, 60, 100, 30);

        returnLabel.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        returnLabel.setForeground(new java.awt.Color(255, 255, 255));
        returnLabel.setText("Return Date");
        getContentPane().add(returnLabel);
        returnLabel.setBounds(470, 60, 110, 30);

        pickupDate.setToolTipText("Pick Up Date");
        getContentPane().add(pickupDate);
        pickupDate.setBounds(240, 90, 210, 40);
        getContentPane().add(returnDate);
        returnDate.setBounds(470, 90, 210, 40);

        filterBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/funnel.png"))); // NOI18N
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });
        getContentPane().add(filterBtn);
        filterBtn.setBounds(690, 90, 50, 40);

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/car.png"))); // NOI18N
        backgroundImage.setMinimumSize(new java.awt.Dimension(1300, 700));
        backgroundImage.setPreferredSize(new java.awt.Dimension(1300, 700));
        getContentPane().add(backgroundImage);
        backgroundImage.setBounds(-3, -4, 1300, 710);

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/search.png"))); // NOI18N
        searchBtn.setBorder(null);
        getContentPane().add(searchBtn);
        searchBtn.setBounds(1190, 80, 60, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        DefaultTableModel model = (DefaultTableModel)carTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        carTable.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(searchField.getText()));
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        if(searchField.getText().equals(" Search...")){
            searchField.setText("");
            searchField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchFieldFocusGained

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        if(searchField.getText().equals("")){
            searchField.setText(" Search...");
            searchField.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchFieldFocusLost

    
    private void carTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carTableMouseClicked
        
        if (evt.getClickCount() == 2){
            
            if(pickupDate.getDate()!= null && returnDate.getDate() != null){
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                String pickup_date = sdf.format(pickupDate.getDate());
                String return_date = sdf.format(returnDate.getDate());
                
                int row = carTable.getSelectedRow();
                String carPlate = carTable.getModel().getValueAt(carTable.convertRowIndexToModel(row), 0).toString();

                Car chosenCar = DataIO.chosenCar(carPlate);

                RentCar.carChosen = chosenCar;
                RentCar.pickup_Date = pickup_date;
                RentCar.return_Date = return_date;
                
                this.setVisible(false);
                CarDetails cd = new CarDetails();
                cd.setVisible(true);
            }
        }
    }//GEN-LAST:event_carTableMouseClicked

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
//        Date pickup = pickupDate.getDate();
        
        if(pickupDate.getDate()!= null && returnDate.getDate() != null){
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String pickup_date = sdf.format(pickupDate.getDate());
            String return_date = sdf.format(returnDate.getDate());

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy", Locale.ENGLISH);
            LocalDate pickupdate = LocalDate.parse(pickup_date, formatter);
            LocalDate returndate = LocalDate.parse(return_date, formatter);
            
            ArrayList<Car> filterCars = DataIO.filterCar(pickupdate, returndate);
            
            DefaultTableModel model = (DefaultTableModel)carTable.getModel();
            
            while (model.getRowCount() > 0) {
                    model.removeRow(0);
            }
            
            Object[] tableLines = filterCars.toArray();

            for (Object tableLine : tableLines) {
               String line = tableLine.toString().trim();
               //split result with "|"
               String[] dataRow = line.split("\\|");
               //add result in table
               model.addRow(dataRow);
            }
            //returnDate.getDate();
//            if(indate.compareTo(checkoutDate) <= 0 && outdate.compareTo(checkinDate) >= 0){
//                
//            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Input Date.", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_filterBtnActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        this.setVisible(false);
        
        MainMenu mm = new MainMenu();
        mm.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentCar().setVisible(true);
            }
        });
    }
    
    public void readCarTable(){
       
        
        DefaultTableModel model = (DefaultTableModel)carTable.getModel();
        
        Object[] tableLines = DataIO.cars.toArray();

        for (Object tableLine : tableLines) {
           String line = tableLine.toString().trim();
           //split result with "|"
           String[] dataRow = line.split("\\|");
           //add result in table
           model.addRow(dataRow);
        }
        
    }
    
    
        
                
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JTable carTable;
    private javax.swing.JButton filterBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser pickupDate;
    private javax.swing.JLabel pickupLabel;
    private com.toedter.calendar.JDateChooser returnDate;
    private javax.swing.JLabel returnLabel;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel topBar;
    // End of variables declaration//GEN-END:variables
}
